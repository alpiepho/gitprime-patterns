[
    {
        "name": "1. Domain Champion",
        "description": "(Individual) The Domain Champion is an expert in a particular area of the codebase. They know nearly everything there is to know about their domain: every class, every method, every algorithm and pattern.",
        "imagePre": "",
        "imagePost": "./images/screeshot_1_domain.png",
        "subtermsimple": {
            "name": "How to recognize it",
            "description": "Domain Champions will always work in the same area of code. They’ll also rewrite their code over and over, and you’ll see it in churn and legacy refactoring metrics as they perfect it...."
        },
        "subtermlist": {
            "name": "What to do",
            "ordered": true,
            "list": [
                {
                    "description": "Acknowledge their expertise and encourage them to share..."
                },
                {
                    "description": "Ask them what they like to work on..."
                },
                {
                    "description": "Ask them if they are willing to take on a small assignment outside their domain..."
                }
            ]
        },
        "subtermlinks": {
            "name": "",
            "list": [
                {
                    "name": "",
                    "url": ""
                }
            ]
        },
        "subtermgoogle": {
            "name": "",
            "list": [
                {
                    "name": ""
                }
            ]
        }
    },
    {
        "name": "2. Hoarding the Code",
        "description": "(Individual) This pattern refers to the work behavior of repeatedly working privately and hoarding all work in progress to deliver one giant pull request at the end of the sprint.",
        "imagePre": "",
        "imagePost": "",
        "subtermsimple": {
            "name": "How to recognize it",
            "description": "TODO"
        },
        "subtermlist": {
            "name": "What to do",
            "ordered": true,
            "list": [
                {
                    "description": "TODO"
                },
                {
                    "description": "TODO"
                }
            ]
        },
        "subtermlinks": {
            "name": "",
            "list": [
                {
                    "name": "",
                    "url": ""
                }
            ]
        },
        "subtermgoogle": {
            "name": "",
            "list": [
                {
                    "name": ""
                }
            ]
        }
    },
    {
        "name": "3. Unusually High Churn",
        "description": "(Individual) Churn is a natural and healthy part of the development process and varies from project to project. However, Unusually High Churn is often an early indicator that a team or a person may be struggling with an assignment.",
        "imagePre": "",
        "imagePost": "",
        "subtermsimple": {
            "name": "How to recognize it",
            "description": "TODO"
        },
        "subtermlist": {
            "name": "What to do",
            "ordered": true,
            "list": [
                {
                    "description": "TODO"
                },
                {
                    "description": "TODO"
                }
            ]
        },
        "subtermlinks": {
            "name": "",
            "list": [
                {
                    "name": "",
                    "url": ""
                }
            ]
        },
        "subtermgoogle": {
            "name": "",
            "list": [
                {
                    "name": ""
                }
            ]
        }
    },
    {
        "name": "4. Bullseye Commits",
        "description": "(Individual) This pattern is relatively common in most teams, but it often goes unrecognized: an engineer understands a problem, breaks down the project into smaller tasks, and submits code that has little room for improvement.",
        "imagePre": "",
        "imagePost": "",
        "subtermsimple": {
            "name": "How to recognize it",
            "description": "TODO"
        },
        "subtermlist": {
            "name": "What to do",
            "ordered": true,
            "list": [
                {
                    "description": "TODO"
                },
                {
                    "description": "TODO"
                }
            ]
        },
        "subtermlinks": {
            "name": "",
            "list": [
                {
                    "name": "",
                    "url": ""
                }
            ]
        },
        "subtermgoogle": {
            "name": "",
            "list": [
                {
                    "name": ""
                }
            ]
        }
    },
    {
        "name": "5. Heroing",
        "description": "(Individual) Right before a release, the “Hero” finds some critical defect and makes a diving catch to save the day. More formally, Heroing is the reoccurring tendency to fix other people’s work at the last minute.",
        "imagePre": "",
        "imagePost": "",
        "subtermsimple": {
            "name": "How to recognize it",
            "description": "TODO"
        },
        "subtermlist": {
            "name": "What to do",
            "ordered": true,
            "list": [
                {
                    "description": "TODO"
                },
                {
                    "description": "TODO"
                }
            ]
        },
        "subtermlinks": {
            "name": "",
            "list": [
                {
                    "name": "",
                    "url": ""
                }
            ]
        },
        "subtermgoogle": {
            "name": "",
            "list": [
                {
                    "name": ""
                }
            ]
        }
    },
    {
        "name": "6. Over Helping",
        "description": "(Individual) Collaboration among teammates is a natural and expected part of the development process. Over Helping is the pattern whereby one developer spends unnatural amounts of time helping another developer to get their work across the line.",
        "imagePre": "",
        "imagePost": "",
        "subtermsimple": {
            "name": "How to recognize it",
            "description": "TODO"
        },
        "subtermlist": {
            "name": "What to do",
            "ordered": true,
            "list": [
                {
                    "description": "TODO"
                },
                {
                    "description": "TODO"
                }
            ]
        },
        "subtermlinks": {
            "name": "",
            "list": [
                {
                    "name": "",
                    "url": ""
                }
            ]
        },
        "subtermgoogle": {
            "name": "",
            "list": [
                {
                    "name": ""
                }
            ]
        }
    },
    {
        "name": "7. Clean As You Go",
        "description": "(Individual) A codebase is continuously evolving by nature, but it doesn’t evolve evenly across all aspects. A Clean As You Go engineer will notice and refine shortcomings even if it’s not essential to the task at hand.",
        "imagePre": "",
        "imagePost": "",
        "subtermsimple": {
            "name": "How to recognize it",
            "description": "TODO"
        },
        "subtermlist": {
            "name": "What to do",
            "ordered": true,
            "list": [
                {
                    "description": "TODO"
                },
                {
                    "description": "TODO"
                }
            ]
        },
        "subtermlinks": {
            "name": "",
            "list": [
                {
                    "name": "",
                    "url": ""
                }
            ]
        },
        "subtermgoogle": {
            "name": "",
            "list": [
                {
                    "name": ""
                }
            ]
        }
    },
    {
        "name": "8. In the Zone",
        "description": "(Individual) This pattern is exhibited by engineers whose work is, in a word, consistent. They have a knack for getting in the zone and shipping high-quality work week in and week out. Their work is reliable and predictable in nearly every way.",
        "imagePre": "",
        "imagePost": "",
        "subtermsimple": {
            "name": "How to recognize it",
            "description": "TODO"
        },
        "subtermlist": {
            "name": "What to do",
            "ordered": true,
            "list": [
                {
                    "description": "TODO"
                },
                {
                    "description": "TODO"
                }
            ]
        },
        "subtermlinks": {
            "name": "",
            "list": [
                {
                    "name": "",
                    "url": ""
                }
            ]
        },
        "subtermgoogle": {
            "name": "",
            "list": [
                {
                    "name": ""
                }
            ]
        }
    },
    {
        "name": "9. Bit Twiddling",
        "description": "(Individual) Bit Twiddling is like working on jigsaw puzzle to the point where everything looks the same and you’re not making progress anymore. You might pick up the same piece, try it in a few places, rotate it, put down, only to pick it up a few minutes later.",
        "imagePre": "",
        "imagePost": "",
        "subtermsimple": {
            "name": "How to recognize it",
            "description": "TODO"
        },
        "subtermlist": {
            "name": "What to do",
            "ordered": true,
            "list": [
                {
                    "description": "TODO"
                },
                {
                    "description": "TODO"
                }
            ]
        },
        "subtermlinks": {
            "name": "",
            "list": [
                {
                    "name": "",
                    "url": ""
                }
            ]
        },
        "subtermgoogle": {
            "name": "",
            "list": [
                {
                    "name": ""
                }
            ]
        }
    },
    {
        "name": "10. The Busy Body",
        "description": "(Individual) The Busy Body is an engineer who skips all over the codebase: they’ll fix a front-end problem here, jump to some refactoring, then fiddle with the database over there.",
        "imagePre": "",
        "imagePost": "",
        "subtermsimple": {
            "name": "How to recognize it",
            "description": "TODO"
        },
        "subtermlist": {
            "name": "What to do",
            "ordered": true,
            "list": [
                {
                    "description": "TODO"
                },
                {
                    "description": "TODO"
                }
            ]
        },
        "subtermlinks": {
            "name": "",
            "list": [
                {
                    "name": "",
                    "url": ""
                }
            ]
        },
        "subtermgoogle": {
            "name": "",
            "list": [
                {
                    "name": ""
                }
            ]
        }
    },
    {
        "name": "11. Scope Creep",
        "description": "(Team) Intuitively, we all know what Scope Creep is — along with its associated risks. Still, there are plenty of different definitions for the issue so here’s what we’re focusing on:",
        "imagePre": "",
        "imagePost": "",
        "subtermsimple": {
            "name": "How to recognize it",
            "description": "TODO"
        },
        "subtermlist": {
            "name": "What to do",
            "ordered": true,
            "list": [
                {
                    "description": "TODO"
                },
                {
                    "description": "TODO"
                }
            ]
        },
        "subtermlinks": {
            "name": "",
            "list": [
                {
                    "name": "",
                    "url": ""
                }
            ]
        },
        "subtermgoogle": {
            "name": "",
            "list": [
                {
                    "name": ""
                }
            ]
        }
    },
    {
        "name": "12. Flaky Product Ownership",
        "description": "(Team) Miscommunications between Product and Engineering can easily lead to Scope Creep. Flaky Product Ownership, however, can show up slightly different in the data and also generally requires a different approach.",
        "imagePre": "",
        "imagePost": "",
        "subtermsimple": {
            "name": "How to recognize it",
            "description": "TODO"
        },
        "subtermlist": {
            "name": "What to do",
            "ordered": true,
            "list": [
                {
                    "description": "TODO"
                },
                {
                    "description": "TODO"
                }
            ]
        },
        "subtermlinks": {
            "name": "",
            "list": [
                {
                    "name": "",
                    "url": ""
                }
            ]
        },
        "subtermgoogle": {
            "name": "",
            "list": [
                {
                    "name": ""
                }
            ]
        }
    },
    {
        "name": "13. Expanding Refactor",
        "description": "(Team) Expanding refactors happen when a planned effort to improve or revise a section of code triggers a dramatic widening of scope.",
        "imagePre": "",
        "imagePost": "",
        "subtermsimple": {
            "name": "How to recognize it",
            "description": "TODO"
        },
        "subtermlist": {
            "name": "What to do",
            "ordered": true,
            "list": [
                {
                    "description": "TODO"
                },
                {
                    "description": "TODO"
                }
            ]
        },
        "subtermlinks": {
            "name": "",
            "list": [
                {
                    "name": "",
                    "url": ""
                }
            ]
        },
        "subtermgoogle": {
            "name": "",
            "list": [
                {
                    "name": ""
                }
            ]
        }
    },
    {
        "name": "14. Just One More Thing",
        "description": "(Team) 'Just One More Thing' refers to the pattern of late-arriving pull requests. A team submits work, but then—right before the deadline—they jump in and make additions to that work.",
        "imagePre": "",
        "imagePost": "",
        "subtermsimple": {
            "name": "How to recognize it",
            "description": "TODO"
        },
        "subtermlist": {
            "name": "What to do",
            "ordered": true,
            "list": [
                {
                    "description": "TODO"
                },
                {
                    "description": "TODO"
                }
            ]
        },
        "subtermlinks": {
            "name": "",
            "list": [
                {
                    "name": "",
                    "url": ""
                }
            ]
        },
        "subtermgoogle": {
            "name": "",
            "list": [
                {
                    "name": ""
                }
            ]
        }
    },
    {
        "name": "15. Rubber Stamping",
        "description": "(Team) Rubber Stamping is the process by which an engineer approves their colleague’s PR without giving it a substantial review.",
        "imagePre": "",
        "imagePost": "",
        "subtermsimple": {
            "name": "How to recognize it",
            "description": "TODO"
        },
        "subtermlist": {
            "name": "What to do",
            "ordered": true,
            "list": [
                {
                    "description": "TODO"
                },
                {
                    "description": "TODO"
                }
            ]
        },
        "subtermlinks": {
            "name": "",
            "list": [
                {
                    "name": "",
                    "url": ""
                }
            ]
        },
        "subtermgoogle": {
            "name": "",
            "list": [
                {
                    "name": ""
                }
            ]
        }
    },
    {
        "name": "16. Knowledge Silos",
        "description": "(Team) Knowledge Silos are usually experienced between departments in traditional organizational structures, but they also form within teams when information is not passing freely between individuals.",
        "imagePre": "",
        "imagePost": "",
        "subtermsimple": {
            "name": "How to recognize it",
            "description": "TODO"
        },
        "subtermlist": {
            "name": "What to do",
            "ordered": true,
            "list": [
                {
                    "description": "TODO"
                },
                {
                    "description": "TODO"
                }
            ]
        },
        "subtermlinks": {
            "name": "",
            "list": [
                {
                    "name": "",
                    "url": ""
                }
            ]
        },
        "subtermgoogle": {
            "name": "",
            "list": [
                {
                    "name": ""
                }
            ]
        }
    },
    {
        "name": "17. Self-Merging PRs",
        "description": "(Team) This pattern refers to when an engineer opens a pull request and then approves it themselves. This means no one else reviewed the work and it’s headed to production!",
        "imagePre": "",
        "imagePost": "",
        "subtermsimple": {
            "name": "How to recognize it",
            "description": "TODO"
        },
        "subtermlist": {
            "name": "What to do",
            "ordered": true,
            "list": [
                {
                    "description": "TODO"
                },
                {
                    "description": "TODO"
                }
            ]
        },
        "subtermlinks": {
            "name": "",
            "list": [
                {
                    "name": "",
                    "url": ""
                }
            ]
        },
        "subtermgoogle": {
            "name": "",
            "list": [
                {
                    "name": ""
                }
            ]
        }
    },
    {
        "name": "18. Long-Running PRs",
        "description": "(Team) Long-running pull requests are PRs that have been open for a very long time (more than a week). A PR that doesn’t close in a normal amount of time (within a day) can indicate uncertainty or disagreement about the code.",
        "imagePre": "",
        "imagePost": "",
        "subtermsimple": {
            "name": "How to recognize it",
            "description": "TODO"
        },
        "subtermlist": {
            "name": "What to do",
            "ordered": true,
            "list": [
                {
                    "description": "TODO"
                },
                {
                    "description": "TODO"
                }
            ]
        },
        "subtermlinks": {
            "name": "",
            "list": [
                {
                    "name": "",
                    "url": ""
                }
            ]
        },
        "subtermgoogle": {
            "name": "",
            "list": [
                {
                    "name": ""
                }
            ]
        }
    },
    {
        "name": "19. A High Bus Factor",
        "description": "(Team) 'Bus factor' is a thought experiment that asks what the consequence would be if an individual team member were hit by a bus. More specifically:",
        "imagePre": "",
        "imagePost": "",
        "subtermsimple": {
            "name": "How to recognize it",
            "description": "TODO"
        },
        "subtermlist": {
            "name": "What to do",
            "ordered": true,
            "list": [
                {
                    "description": "TODO"
                },
                {
                    "description": "TODO"
                }
            ]
        },
        "subtermlinks": {
            "name": "",
            "list": [
                {
                    "name": "",
                    "url": ""
                }
            ]
        },
        "subtermgoogle": {
            "name": "",
            "list": [
                {
                    "name": ""
                }
            ]
        }
    },
    {
        "name": "20. Sprint Retrospectives",
        "description": "(Team) Retrospectives are a common practice that offer an easy way to continuously improve: take time to reflect, as an individual or a team, on a project, action, or occurrence.",
        "imagePre": "",
        "imagePost": "",
        "subtermsimple": {
            "name": "How to recognize it",
            "description": "TODO"
        },
        "subtermlist": {
            "name": "What to do",
            "ordered": true,
            "list": [
                {
                    "description": "TODO"
                },
                {
                    "description": "TODO"
                }
            ]
        },
        "subtermlinks": {
            "name": "",
            "list": [
                {
                    "name": "",
                    "url": ""
                }
            ]
        },
        "subtermgoogle": {
            "name": "",
            "list": [
                {
                    "name": ""
                }
            ]
        }
    },
    {
        "name": "",
        "description": "",
        "imagePre": "",
        "imagePost": "",
        "subtermsimple": {
            "name": "",
            "description": ""
        },
        "subtermlist": {
            "name": "",
            "ordered": false,
            "list": [
                {
                    "description": ""
                }
           ]
        },
        "subtermlinks": {
            "name": "",
            "list": [
                {
                    "name": "",
                    "url": ""
                }
            ]
        },
        "subtermgoogle": {
            "name": "",
            "list": [
                {
                    "name": ""
                }
            ]
        }
    }
]